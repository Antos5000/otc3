local acafont = render.setup_font("Small Fonts", 9, 150, true, false, true) local INDS = ui.get_bool("Indicators") local acafont1 = render.setup_font("Small Fonts", 12, 150, true, false, true) local offset = 10 local menu = ui local randomz local pitchch = ui.get_int("0Antiaim.pitch") local int = 0 cheat.notify("Divine.lua loaded, have fun!") cheat.notify("Divine.lua loaded, have fun!") cheat.notify("Divine.lua loaded, have fun!") cheat.notify("Divine.lua loaded, have fun!") cheat.notify("Divine.lua loaded, have fun!") cheat.notify("Divine.lua loaded, have fun!") cheat.notify("Divine.lua loaded, have fun!") cheat.notify("Divine.lua loaded, have fun!") cheat.notify("Divine.lua loaded, have fun!") cheat.notify("Divine.lua loaded, have fun!") cheat.notify("Divine.lua loaded, have fun!") cheat.notify("Divine.lua loaded, have fun!") cheat.notify("Divine.lua loaded, have fun!") cheat.notify("Divine.lua loaded, have fun!") cheat.notify("Divine.lua loaded, have fun!") cheat.notify("Divine.lua loaded, have fun!") ui.add_sliderint("Rage Settings") ui.add_checkbox("Tick") ui.add_checkbox("AntiBrute Resolver") ui.add_sliderint("Anti-Aim Settings") menu.add_combobox("Anti-Aim Types:",{"None","Static-Maximum","Static-Minimum","Fake-Brute","Yaw-Only","Yaw-Only-Math","Skeet-Lag","Divine-Lag","Divine-Legit","Anti-BruteForce","Anti-BruteForce-Sync"}) ui.add_checkbox("Pitch Zero") ui.add_checkbox("Lag Sync") ui.add_checkbox("In Air Jitter") ui.add_checkbox("Low Delta") ui.add_sliderint("Visuals") ui.add_checkbox("Indicators") ui.add_checkbox("Enable viewmodel in scope") ui.add_sliderint("Miscellaneous") ui.add_checkbox("Divine Killsay") ui.add_checkbox("Ping Spike") ui.add_sliderint("Ping Amount", 0, 300) local d=0;local e=0;local f=0;local g=0;local h=0;local i=0;local j=0; local switch = false local function k() if menu.get_int("Anti-Aim Types:")==1 then menu.set_int("0Antiaim.pitch",1) menu.set_bool("Antiaim.fake_lag",true) menu.set_int("0Antiaim.desync",1) menu.set_int("Antiaim.yaw_offset",0) menu.set_int("0Antiaim.inverted_desync_range",60) menu.set_int("0Antiaim.desync_range",60) else if menu.get_int("Anti-Aim Types:")==2 then menu.set_int("0Antiaim.pitch",1) menu.set_bool("Antiaim.fake_lag",true) menu.set_int("0Antiaim.desync",1) menu.set_int("Antiaim.yaw_offset",0) menu.set_int("0Antiaim.inverted_desync_range",1) menu.set_int("0Antiaim.desync_range",1) else if menu.get_int("Anti-Aim Types:")==3 then menu.set_int("0Antiaim.pitch",1) menu.set_bool("Antiaim.fake_lag",true) menu.set_int("0Antiaim.desync",1) menu.set_int("Antiaim.yaw_offset",0) if d>=1 then d=0 menu.set_int("0Antiaim.inverted_desync_range",60) menu.set_int("0Antiaim.desync_range",60) else d=d+1 menu.set_int("0Antiaim.inverted_desync_range",1) menu.set_int("0Antiaim.desync_range",1) end else if menu.get_int("Anti-Aim Types:")==4 then menu.set_int("0Antiaim.pitch",1) menu.set_bool("Antiaim.fake_lag",true) menu.set_int("Antiaim.desync",0) if e>=1 then menu.set_int("Antiaim.yaw_offset",math.random(-25,-35)) e=0 else menu.set_int("Antiaim.yaw_offset",math.random(25,35)) e=e+1 end else if menu.get_int("Anti-Aim Types:")==5 then menu.set_int("0Antiaim.pitch",1) menu.set_bool("Antiaim.fake_lag",true) menu.set_int("0Antiaim.desync",0) menu.set_int("Antiaim.yaw_offset",math.random(40,-40)) else if menu.get_int("Anti-Aim Types:")==6 then menu.set_int("0Antiaim.pitch",1) menu.set_int("0Antiaim.desync",1) menu.set_bool("Antiaim.fake_lag",true) menu.set_int("Antiaim.fake_lag_type",2) if f>=150 then f=0 menu.set_int("Antiaim.yaw_offset",math.random(40,-40)) menu.set_int("Antiaim.fake_lag_limit",math.random(8,16)) menu.set_int("0Antiaim.inverted.desync_range",math.random(0,40)) menu.set_int("0Antiaim.desync_range",math.random(0,40)) else f=f+1 end else if menu.get_int("Anti-Aim Types:")==7 then menu.set_bool("Antiaim.fake_lag",true) menu.set_int("0Antiaim.pitch",1) menu.set_int("Antiaim.fake_lag_type",2) menu.set_int("0Antiaim.desync",1) if g>=150 then g=0 menu.set_int("Antiaim.fake_lag_limit",math.random(8,16)) menu.set_int("Antiaim.yaw_offset",math.random(40,-40)) menu.set_int("Antiaim.inverted.desync_range",math.random(0,20)) menu.set_int("0Antiaim.desync_range",math.random(0,20)) else g=g+1 end else if menu.get_int("Anti-Aim Types:")==8 then menu.set_int("0Antiaim.pitch",0) menu.set_bool("Antiaim.fake_lag",true) menu.set_int("Antiaim.fake_lag_type",2) menu.set_int("0Antiaim.desync",1) menu.set_int("Antiaim.yaw_offset",-180) if h>=100 then h=0 menu.set_int("0Antiaim.inverted.desync_range",math.random(0,60)) menu.set_int("Antiaim.fake_lag_limit",math.random(8,16)) menu.set_int("0Antiaim.desync_range",math.random(0,60)) else h=h+1 end elseif menu.get_int("Anti-Aim Types:")==9 then menu.set_int("0Antiaim.pitch",1) menu.set_int("0Antiaim.desync",1) menu.set_bool("Antiaim.fake_lag",false) if i>=150 then menu.set_int("Antiaim.yaw_offset",math.random(20,-20)) menu.set_int("0Antiaim.inverted.desync_range",math.random(0,20)) menu.set_int("0Antiaim.desync_range",math.random(0,20)) i=0 else i=i+1 end else if menu.get_int("Anti-Aim Types:")==10 then menu.set_int("0Antiaim.pitch",1) menu.set_bool("Antiaim.fake_lag",true) menu.set_int("0Antiaim.desync",1) menu.set_int("Antiaim.fake_lag_type",2) if i>=150 then menu.set_int("Antiaim.yaw_offset",math.random(20,-20)) menu.set_int("0Antiaim.inverted.desync_range",math.random(0,20)) menu.set_int("0Antiaim.desync_range",math.random(0,20)) menu.set_int("Antiaim.fake_lag_limit",math.random(8,16)) i=0 else i=i+1 end end end end end end end end end end end local function bebra() if engine.get_active_key(0x20) and ui.get_bool("In Air Jitter") then if switch then ui.set_int("Antiaim.fake_lag_limit", 7, false) ui.set_int("0Antiaim.body_lean", math.random(5, 35)) ui.set_int("0Antiaim.inverted_body_lean", math.random(35, 65)) ui.set_int("0Antiaim.desync_range", math.random(4, 8)) ui.set_int("0Antiaim.inverted_desync_range", math.random(9, 11)) ui.set_int("Antiaim.yaw_offset", math.random(-20, 35)) else ui.set_int("Antiaim.fake_lag_limit", 16, true) ui.set_int("0Antiaim.body_lean", math.random(5, 35)) ui.set_int("0Antiaim.inverted_body_lean", math.random(35, 5)) ui.set_int("0Antiaim.desync_range", math.random(9, 11)) ui.set_int("0Antiaim.inverted_desync_range", math.random(14, 14)) ui.set_int("Antiaim.yaw_offset", math.random(-20, 15)) end end end local function lagsync() if ui.get_bool("Lag Sync") and not engine.get_active_key(0x20) then if switch then ui.set_int("Antiaim.fake_lag_limit", 12, false) ui.set_int("0Antiaim.body_lean", math.random(1, 100)) ui.set_int("0Antiaim.inverted_body_lean", math.random(1, 100)) ui.set_int("0Antiaim.desync_range", math.random(10, 49)) ui.set_int("0Antiaim.inverted_desync_range", math.random(13, 52)) ui.set_int("Antiaim.yaw_offset", math.random(-10, 45)) else ui.set_int("Antiaim.fake_lag_limit", 16, true) ui.set_int("0Antiaim.body_lean", math.random(1, 100)) ui.set_int("0Antiaim.inverted_body_lean", math.random(1, 100)) ui.set_int("0Antiaim.desync_range", math.random(10, 49)) ui.set_int("0Antiaim.inverted_desync_range", math.random(13, 52)) ui.set_int("Antiaim.yaw_offset", math.random(-15, 35)) end end end function pitchzero(cmd) if ui.get_bool("Pitch Zero") == false then return end if entitylist.get_local_player() == nil then return end flag = entitylist.get_local_player():get_prop_int("CBasePlayer","m_fFlags") if flag == 256 or flag == 262 then int = 0 end if flag == 257 or flag == 261 or flag == 263 then int = int + 4 end if int > 45 and int < 250 then ui.set_int("0Antiaim.pitch", 0) else ui.set_int("0Antiaim.pitch", pitchch) end end local function idealtick() local local_player = entitylist.get_local_player() local is_alive = local_player:is_alive() if ui.get_bool("Tick") then if is_alive == true then if ui.get_keybind_state(keybinds.automatic_peek) then ui.set_bool("Ragebot.slow_teleport", false) else ui.set_bool("Ragebot.slow_teleport", true) return end end end end function lowdelta() if ui.get_bool("Low Delta") then if switch then switch = false else switch = true end if engine.get_active_key(0x10)  then ui.set_int("0Antiaim.desync_range", 25) ui.set_int("0Antiaim.inverted_desync_range", 25) if swtich then swtich = true else swtich = false end end end end function lowdelta1() if ui.get_bool("Low Delta") then if not engine.get_active_key(0x10)  then ui.set_int("0Antiaim.desync_range", 60) ui.set_int("0Antiaim.inverted_desync_range", 60) end end end function PingSpiker() if (ui.get_bool("Ping Spike")) then pingamount = ui.get_int("Ping Amount") console.set_int("net_fakelag", pingamount) end end cheat.RegisterCallback("on_createmove", function() switch = not switch lowdelta1() lowdelta() lagsync() bebra() k() pitchzero() idealtick() PingSpiker() end) local switch = true local function paint() local y = engine.get_screen_height() local x = engine.get_screen_width() local xmen = globalvars.get_menu_pos_x() local ymen = globalvars.get_menu_pos_y() local menu_opened = globalvars.is_open_menu() local fps = globalvars.get_framerate() local rb = math.floor(math.sin(globalvars.get_realtime() * 2) * 127 + 128) local gb =  math.floor(math.sin(globalvars.get_realtime() * 2 + 2) * 127 + 128) local bb = math.floor(math.sin(globalvars.get_realtime() * 2 + 4) * 127 + 128) local rbb = math.floor(math.sin(globalvars.get_realtime() * 3) * 127 + 128) local gbb =  math.floor(math.sin(globalvars.get_realtime() * 3 + 2) * 127 + 128) local bbb = math.floor(math.sin(globalvars.get_realtime() * 3 + 4) * 127 + 128) offset = 10 if ui.get_bool("Enable viewmodel in scope") then if ui.get_keybind_state( "misc.third_person_key" ) then console.set_int( "fov_cs_debug", 0 ) else console.set_int( "fov_cs_debug", 90 ) end else console.set_int( "fov_cs_debug", 0 ) end if ui.get_bool("Indicators") then if not engine.is_in_game() then return end if entitylist.get_local_player():get_health() == 0 then return end render.gradient(x/2-40, y/2+30, 80, 1, color.new(142, 138, 181, 255), color.new(255,255,255)) render.text(acafont1, x/2-25, y/2 +19, color.new(255, 255, 255, 255), "Divine") render.text(acafont1, x/2+3, y/2 +19, color.new(255, 255, 255, 255), ".lua") render.text(acafont, x/2-24, y/2 +30, color.new(142, 138, 181, 255), "Desync:") if(ui.get_keybind_state(keybinds.flip_desync)) then render.text(acafont, x/2+3, y/2 +20 + offset, color.new(255, 255, 255, 255), "Left") offset = offset + 10 else render.text(acafont, x/2+3, y/2 +20 + offset, color.new(255, 255, 255, 255), "Right") offset = offset + 10 end if(ui.get_keybind_state(keybinds.double_tap)) then render.text(acafont, x/2-24, y/2 +37, color.new(25, 255, 25, 255), "EXP") render.text(acafont, x/2-10, y/2 +37, color.new(118, 118, 118, 160), "BAIM") render.text(acafont, x/2+12, y/2 +37, color.new(118, 118, 118, 160), "SP") end if not (ui.get_keybind_state(keybinds.double_tap)) then render.text(acafont, x/2-24, y/2 +37, color.new(118, 118, 118, 160), "EXP") render.text(acafont, x/2-10, y/2 +37, color.new(118, 118, 118, 160), "BAIM") render.text(acafont, x/2+12, y/2 +37, color.new(118, 118, 118, 160), "SP") end if(ui.get_keybind_state(keybinds.hide_shots)) then render.text(acafont, x/2-24, y/2 +37, color.new(255, 255, 255, 255), "EXP") render.text(acafont, x/2-10, y/2 +37, color.new(118, 118, 118, 160), "BAIM") render.text(acafont, x/2+12, y/2 +37, color.new(118, 118, 118, 160), "SP") end if(ui.get_keybind_state(keybinds.body_aim)) then render.text(acafont, x/2-10, y/2 +37, color.new(255, 255, 255, 255), "BAIM") end if(ui.get_keybind_state(keybinds.safe_points)) then render.text(acafont, x/2+12, y/2 +37, color.new(255, 255, 255, 255), "SP") end end end cheat.RegisterCallback("on_paint", paint) function resolver() if ui.get_bool("AntiBrute Resolver") then if result == miss then ui.set_int("Ragebot.resolvertypes", (math.random (0 , 1))) end end end cheat.RegisterCallback("on_shot", resolver) events.register_event("player_death", function(e) if ui.get_bool("Divine Killsay") then local attacker = e:get_int("attacker") local attacker_to_player = engine.get_player_for_user_id(attacker) local lp_idx = engine.get_local_player_index() if attacker_to_player == lp_idx then phrases = {"divine.lua 最佳LUA", "get good. get divine.lua", "最佳LUA discord.gg/bscwgjRhXb", "divine.lua - best rawetrip lua"} randomz = math.random(1,4) console.execute_client_cmd("say " .. phrases[randomz]) end end end)